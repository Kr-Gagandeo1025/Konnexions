@tailwind base;
@tailwind components;
@tailwind utilities;

/* The lines which have been commented out were already present as a css reset, instead I've used my own css resets*/
:root {
  --purple: #8a2be2;
  --violet: #ee82ee;
  --pink: #ff69b4;

  --clr-accent-400: hsl(12, 88%, 59%);
  --clr-accent-100: hsl(13, 100%, 96%);

  --clr-primary-400: hsl(228, 39%, 23%);

  --clr-neutral-100: hsl(232, 12%, 13%);
  --clr-neutral-900: hsl(0 0% 0%);

  --ff-primary: "Inter", sans-serif;

  --ff-body: var(--ff-primary);
  --ff-heading: var(--ff-primary);

  --fw-regular: 400;
  --fw-medium: 500;
  --fw-semi-bold: 600;
  --fw-bold: 700;

  --fs-300: 0.8125rem;
  --fs-400: 0.875rem;
  --fs-500: 0.9375rem;
  --fs-600: 1rem;
  --fs-650: 1.25rem;
  --fs-675: 1.5rem;
  --fs-700: 1.875rem;
  --fs-750: 2rem;
  --fs-775: 2.25rem;
  --fs-800: 2.5rem;
  --fs-900: 3.5rem;
  --fs-1000: 4rem;

  --fs-body: var(--fs-400);
  --fs-primary-heading: var(--fs-800);
  --fs-secondary-heading: var(--fs-700);
  --fs-nav: var(--fs-500);
  --fs-button: var(--fs-300);
}

/* Set core body defaults */
body {
  min-height: 100vh;
  text-rendering: optimizeSpeed;
  line-height: 1.5;
  overflow: hidden;
}

/* Shapes in Resources */
.pentahedron {
	position: absolute;
	width: 100%;
	height: 100%;
	fill: #3E82F7;
}
.point {
	fill: #8491A3;
}
.rhombus {
	fill: #2DA94F;
	stroke: #2DA94F;
}
.x {
	fill: #FDBD00;
}
.circle {
	fill: #ED412D;
}

#shapeCanvas > svg {
	display: block;
	width: 30px;
	height: 30px;
	position: absolute;
	transform: translateZ(0px);
}

/* Magic Star Effects on Register Button */
@keyframes background-pan {
  from {
    background-position: 0% center;
  }

  to {
    background-position: -200% center;
  }
}
@keyframes scale {
  from, to {
    transform: scale(0);
  }
  
  50% {
    transform: scale(1);
  }
}
@keyframes rotate {
  from {
    transform: rotate(0deg);
  }
  
  to {
    transform: rotate(180deg);
  }
}

.magic {
  display: inline-block;
  position: relative;
}
.magic > .magic-star {
  --size: clamp(20px, 1.5vw, 30px);
  animation: scale 700ms ease forwards;
  display: block;
  height: var(--size);
  left: var(--star-left);
  position: absolute;
  top: var(--star-top);
  width: var(--size);
}
.magic > .magic-star > svg {
  animation: rotate 1000ms linear infinite;
  display: block;
  opacity: 0.7;
}
.magic > .magic-star > svg > path {
  fill: var(--violet);
}
.magic > .magic-text {
  animation: background-pan 3s linear infinite;
  background: linear-gradient(
    to right,
    var(--purple),
    var(--violet),
    var(--pink),
    var(--purple)
  );
  background-size: 200%;
  background-clip: text;
  -webkit-text-fill-color: transparent;
  white-space: nowrap;
}

/* Scrolling effect in Testimonial Sections */
.scroller__wrapper {
  /* How long one slide is visible on screen (from entering screen to leaving it) */
  --scrolling-gallery-item-duration: 15s;
  /* How many items we want to see on screen at once */
  --scrolling-gallery-items-visible: 5;
  /* How many items are to scroll */
  --scrolling-gallery-items-total: v-bind(toppers.length/2);
  overflow: hidden;
  will-change: transform;
}
@media screen and (max-width: 425px) {
  .scroller__wrapper {
    --scrolling-gallery-item-duration: 5s;
    --scrolling-gallery-items-visible: 1;
  }
}
@media screen and (max-width: 768px) and (min-width: 426px) {
  .scroller__wrapper {
    --scrolling-gallery-item-duration: 15s;
    --scrolling-gallery-items-visible: 2;
  }
}

.scroller {
  animation-duration: calc(var(--scrolling-gallery-item-duration, 1s) / var(--scrolling-gallery-items-visible) * var(--scrolling-gallery-items-total));
  animation-timing-function: linear;
  animation-name: scrolling-gallery;
  animation-iteration-count: infinite;
  display: flex;
  white-space: nowrap;
}
.scroller__container {
  /* Without this, scroll will jump on desktop if any vertical scrollbar is shown */
  width: 100vw;
}
.scroller__item {
  flex: 1 0 calc(100% / var(--scrolling-gallery-items-visible));
  /* Without this, block elements will take width from their contents and thus making wrong calculations,
    so this just force elements to take only exact part of the container (screen) and equal for all */
  width: 0px;
  /* If you want to have it continuous without any spaces, remove two lines below */
  box-sizing: border-box;
  padding: 0.5em;
}

.scroller img {
  display: block;
  object-fit: cover;
  object-position: center;
  width: 100%;
}
@keyframes scrolling-gallery {
  0% {
    transform: translateX(0);
  }
  100% {
    transform: translateX(calc(var(--scrolling-gallery-items-total) * -100vw / var(--scrolling-gallery-items-visible)));
  }
}
.scroller:hover, .scroller:focus {
  animation-play-state: paused;
}
